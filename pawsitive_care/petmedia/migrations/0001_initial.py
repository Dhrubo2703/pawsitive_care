# Generated by Django 4.2.23 on 2025-08-01 16:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pets', '0007_pet_vaccination_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('MEDICATION', 'Medications & Treatments'), ('HEALTH_TIPS', 'Health Tips'), ('NUTRITION', 'Nutrition & Diet'), ('TRAINING', 'Training & Behavior'), ('GROOMING', 'Grooming & Care'), ('EMERGENCY', 'Emergency Care'), ('EXPERIENCE', 'Owner Experiences')], max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Blog Categories',
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Blog post title', max_length=200, validators=[django.core.validators.MinLengthValidator(5)])),
                ('content', models.TextField(help_text='Full blog post content', validators=[django.core.validators.MinLengthValidator(50)])),
                ('excerpt', models.TextField(help_text='Short excerpt for previews', max_length=300)),
                ('is_professional_advice', models.BooleanField(default=False, help_text='Is this professional veterinary advice?')),
                ('medical_disclaimer', models.TextField(blank=True, help_text='Medical disclaimer for professional posts')),
                ('medication_name', models.CharField(blank=True, help_text='Name of medication discussed', max_length=100)),
                ('dosage_info', models.TextField(blank=True, help_text='Dosage information (for reference only)')),
                ('side_effects', models.TextField(blank=True, help_text='Known side effects')),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog_images/')),
                ('is_published', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='petmedia.blogcategory')),
                ('related_pet', models.ForeignKey(blank=True, help_text='Pet this post is about (optional)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pets.pet')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(validators=[django.core.validators.MinLengthValidator(3)])),
                ('is_approved', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='petmedia.blogcomment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='petmedia.blogpost')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='petmedia.blogpost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('post', 'user')},
            },
        ),
    ]
