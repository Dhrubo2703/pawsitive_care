# Generated by Django 4.2.23 on 2025-08-03 10:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=50, unique=True)),
                ('category', models.CharField(choices=[('MEDICINE', 'Medicine'), ('SUPPLY', 'Medical Supply'), ('EQUIPMENT', 'Equipment'), ('FOOD', 'Pet Food'), ('OTHER', 'Other')], max_length=20)),
                ('cost_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('unit', models.CharField(choices=[('PIECES', 'Pieces'), ('BOXES', 'Boxes'), ('BOTTLES', 'Bottles'), ('KILOGRAMS', 'Kilograms'), ('LITERS', 'Liters'), ('PACKS', 'Packs')], default='PIECES', max_length=20)),
                ('low_stock_threshold', models.PositiveIntegerField(default=10)),
                ('supplier_name', models.CharField(blank=True, max_length=200)),
                ('supplier_contact', models.CharField(blank=True, max_length=100)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('last_restocked', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('ORDERED', 'Ordered'), ('RECEIVED', 'Received'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('order_date', models.DateField(auto_now_add=True)),
                ('expected_delivery', models.DateField(blank=True, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('IN', 'Stock In'), ('OUT', 'Stock Out'), ('ADJUSTMENT', 'Adjustment'), ('EXPIRED', 'Expired'), ('DAMAGED', 'Damaged')], max_length=20)),
                ('quantity', models.PositiveIntegerField()),
                ('reason', models.CharField(max_length=200)),
                ('old_quantity', models.PositiveIntegerField()),
                ('new_quantity', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.inventoryitem')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.PositiveIntegerField()),
                ('quantity_received', models.PositiveIntegerField(default=0)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.inventoryitem')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.purchaseorder')),
            ],
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='inventory.supplier'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['sku'], name='inventory_i_sku_e27286_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['category'], name='inventory_i_categor_fe6a79_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['quantity'], name='inventory_i_quantit_82f142_idx'),
        ),
        migrations.CreateModel(
            name='EquipmentItem',
            fields=[
            ],
            options={
                'verbose_name': 'Equipment Item',
                'verbose_name_plural': 'Equipment Items',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('inventory.inventoryitem',),
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
            ],
            options={
                'verbose_name': 'Food Item',
                'verbose_name_plural': 'Food Items',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('inventory.inventoryitem',),
        ),
        migrations.CreateModel(
            name='MedicineItem',
            fields=[
            ],
            options={
                'verbose_name': 'Medicine Item',
                'verbose_name_plural': 'Medicine Items',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('inventory.inventoryitem',),
        ),
        migrations.CreateModel(
            name='SupplyItem',
            fields=[
            ],
            options={
                'verbose_name': 'Supply Item',
                'verbose_name_plural': 'Supply Items',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('inventory.inventoryitem',),
        ),
    ]
